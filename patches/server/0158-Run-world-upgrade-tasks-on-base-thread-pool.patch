From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Mon, 30 Jan 2023 00:08:14 +0100
Subject: [PATCH] Run world upgrade tasks on base thread pool

License: AGPL-3.0 (https://www.gnu.org/licenses/agpl-3.0.html)
Gale - https://galemc.org

diff --git a/src/main/java/io/papermc/paper/world/ThreadedWorldUpgrader.java b/src/main/java/io/papermc/paper/world/ThreadedWorldUpgrader.java
index c13df3a375f416273c6a26f5f77624c1f34a918c..ccab7e0d529a9909410da4301db037bf4b0f02f0 100644
--- a/src/main/java/io/papermc/paper/world/ThreadedWorldUpgrader.java
+++ b/src/main/java/io/papermc/paper/world/ThreadedWorldUpgrader.java
@@ -7,17 +7,16 @@ import net.minecraft.nbt.CompoundTag;
 import net.minecraft.resources.ResourceKey;
 import net.minecraft.util.worldupdate.WorldUpgrader;
 import net.minecraft.world.level.ChunkPos;
-import net.minecraft.world.level.Level;
 import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.chunk.storage.ChunkStorage;
 import net.minecraft.world.level.chunk.storage.RegionFileStorage;
-import net.minecraft.world.level.dimension.DimensionType;
 import net.minecraft.world.level.dimension.LevelStem;
-import net.minecraft.world.level.levelgen.WorldGenSettings;
 import net.minecraft.world.level.storage.DimensionDataStorage;
 import net.minecraft.world.level.storage.LevelStorageSource;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.galemc.gale.executor.queue.BaseTaskQueues;
+
 import java.io.File;
 import java.io.IOException;
 import java.text.DecimalFormat;
@@ -47,6 +46,10 @@ public class ThreadedWorldUpgrader {
         this.dimensionType = dimensionType;
         this.worldName = worldName;
         this.worldDir = worldDir;
+        // Gale start - base thread pool - remove world upgrade executors
+        this.threadPool = BaseTaskQueues.scheduledAsync.yieldingExecutor;
+        /*
+        // Gale end - base thread pool - remove world upgrade executors
         this.threadPool = Executors.newFixedThreadPool(Math.max(1, threads), new ThreadFactory() {
             private final AtomicInteger threadCounter = new AtomicInteger();
 
@@ -62,6 +65,7 @@ public class ThreadedWorldUpgrader {
                 return ret;
             }
         });
+         */ // Gale - base thread pool - remove world upgrade executors
         this.dataFixer = dataFixer;
         this.generatorKey = generatorKey;
         this.removeCaches = removeCaches;
@@ -121,17 +125,22 @@ public class ThreadedWorldUpgrader {
             // Gale end - instantly continue on world upgrade finish
         }
         finalExpectedChunks[0] = expectedChunks; // Gale - instantly continue on world upgrade finish
-        this.threadPool.shutdown();
 
         final DecimalFormat format = new DecimalFormat("#0.00");
 
         final long start = System.nanoTime();
 
-        while (!this.threadPool.isTerminated()) {
+        while (true) { // Gale - base thread pool - remove world upgrade executors - wait for task completion instead of thread pool termination
             final long current = info.convertedChunks.get();
 
             LOGGER.info("{}% completed ({} / {} chunks)...", format.format((double)current / (double)expectedChunks * 100.0), current, expectedChunks);
 
+            // Gale start - base thread pool - remove world upgrade executors - wait for task completion instead of thread pool termination
+            if (current == expectedChunks) {
+                break;
+            }
+            // Gale end - base thread pool - remove world upgrade executors - wait for task completion instead of thread pool termination
+
             // Gale start - instantly continue on world upgrade finish
             while (!finishLock.tryLock()) {
                 Thread.onSpinWait();
